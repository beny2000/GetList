name: publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  publish:
    name: publish images
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: debug
        run: pwd && ls * && file ./backend/model_0.69.tar.gz
      - name: Login
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish list_manager
        run: |
          docker build -f ./backend/list_manager/Dockerfile -t ghcr.io/beny2000/list_manager:latest .
          docker push ghcr.io/beny2000/list_manager:latest
      - name: Build and Publish notification_manager
        run: |
          docker build -f ./backend/notification_manager/Dockerfile -t ghcr.io/beny2000/notification_manager:latest .
          docker push ghcr.io/beny2000/notification_manager:latest
      - name: Build and Publish model_manager
        run: |
          docker build -f ./backend/model_manager/Dockerfile -t ghcr.io/beny2000/model_manager:latest .
          docker push ghcr.io/beny2000/model_manager:latest
  deploy:
    needs: publish
    name: deploy images
    runs-on: ubuntu-latest
    
    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # <https://stackoverflow.com/a/70447517>
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
    - name: cleanup
      run: rm -rf ~/.ssh
      
